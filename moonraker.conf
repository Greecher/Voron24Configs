[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /home/pi/printer_data/comms/klippy.sock

[file_manager]
#added this to allow exclude object stuff
enable_object_processing: True

[authorization]
trusted_clients:
    10.17.0.0/16
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128
cors_domains:
    http://*.lan
    http://*.local
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    https://app.fluidd.xyz
    http://app.fluidd.xyz

[octoprint_compat]

[history]

[update_manager]
channel: dev
refresh_interval: 168

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
install_script: tools/install.sh

[update_manager moonraker-telegram-bot]
type: git_repo
path: ~/moonraker-telegram-bot
origin: https://github.com/nlef/moonraker-telegram-bot.git
env: ~/moonraker-telegram-bot-env/bin/python
requirements: scripts/requirements.txt
install_script: scripts/install.sh

[update_manager Klipper-Adaptive-Meshing-Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main

[update_manager CanBoot]
type: git_repo
path: /home/pi/CanBoot
origin: https://github.com/Arksine/CanBoot.git
is_system_service: False

[webcam v2_cam]
icon:
#   A name of the icon to use for the camera.  See the tip following this
#   example for known values.  The default is mdiWebcam.
enabled: false
#   An optional boolean value to indicate if this webcam should be enabled.
#   Default is True.
service: mjpegstreamer
#   The name of the application or service hosting the webcam stream.  Front-
#   ends may use this configuration to determine how to connect to the service
#   and interpret its stream.  See the tip following this example for
#   currently known values.  The default is "mjpegstreamer".
#   A string describing the location of the camera.  Default is printer.
target_fps: 15
#   An integer value specifying the target framerate.  The default is 15 fps.
target_fps_idle: 5
#   An integer value specifying the target framerate when the printer is idle.
#   The default is 5 fps.
stream_url: /webcam/?action=stream
#   The url for the camera stream request.  This may be a full url or a
#   relative path (ie: /webcam?action=stream) if the stream is served on the
#   same host as Moonraker at port 80.  This parameter must be provided.
snapshot_url: /webcam/?action=snapshot
#   The url for the camera snapshot request.  This may be a full url or a
#   relative path (ie: /webcam?action=stream) if the stream is served on the
#   same host as Moonraker at port 80.  The default is an empty url.
flip_horizontal: false
#   A boolean value indicating whether the stream should be flipped
#   horizontally.  The default is false.
flip_vertical: false
#   A boolean value indicating whether the stream should be flipped
#   vertically.  The default is false.
rotation: 180
#   An integer value indicating the amount of clockwise rotation to apply
#   to the stream.  May be 0, 90, 180, or 270.  The default is 0.
aspect_ratio: 4:3
#   The aspect ratio to display for the camera.  Note that this option
#   is specific to certain services, otherwise it is ignored.
#   The default is 4:3.

